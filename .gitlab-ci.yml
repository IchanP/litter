stages:
  - setup
  - test
  - build
  - deploy

setup_kubectl_dependencies:
  stage: setup
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl config use-context $K8S_CONTEXT
    # TODO install operators and other things
  # TODO change this to use rules
  only:
    - staging
    - main

setup_staging_secrets:
  stage: setup
  image:
    name: bitname/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl config use-context $K8S_CONTEXT
    - kubectl create namespace staging --dry-run=client -o yaml | kbuectl apply -f -
    # TODO pull secrets from folders?
  
  only:
    - staging

setup_production_secrets:
  stage: setup
  image:
    name: bitname/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl config use-context $K8S_CONTEXT
    - kubectl create namespace production --dry-run=client -o yaml | kbuectl apply -f -

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
   - echo "Building Image"
   # TODO - This is a template for future images
   # Build taskit image without pushing
   # - /kaniko/executor
    #  --context "${CI_PROJECT_DIR}/taskit"
    #  --dockerfile "${CI_PROJECT_DIR}/taskit/Dockerfile.production"
    #  --no-push

publish:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
  - echo "Rebuilding and publishing images"
   # - /kaniko/executor
   #   --context "${CI_PROJECT_DIR}/taskit"
   #   --dockerfile "${CI_PROJECT_DIR}/taskit/Dockerfile.production"
   #   --destination "${CI_REGISTRY_IMAGE}/taskit:${CI_COMMIT_SHA}"
   #   --destination "${CI_REGISTRY_IMAGE}/taskit:${CI_COMMIT_TAG:-latest}"
  only:
    - main
    - staging 
  needs:
    - build